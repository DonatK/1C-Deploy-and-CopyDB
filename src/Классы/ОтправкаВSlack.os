
Перем АдресРесурса;
Перем Канал;
Перем ИмяБота;
Перем ИконкаБота;
Перем Лог Экспорт;

Процедура Инициализировать( Знач ВебХукСсылка, Знач пКанал = "", Знач пИмяБота = "", Знач пИконкаБота = "" ) Экспорт
	
	АдресРесурса = СтрЗаменить( ВебХукСсылка, "https://hooks.slack.com", "" );
	Канал = пКанал;
	ИмяБота = пИмяБота;
	ИконкаБота = пИконкаБота;
	
КонецПроцедуры

Процедура Отправить( Знач пОснТекст, Знач пДопТекст = "" ) Экспорт
	
	Если Не ЗначениеЗаполнено( АдресРесурса ) Тогда
		Возврат;
	КонецЕсли;
	
	оснТекст = СтрЗаменить( пОснТекст, "\", "\\" );
	допТекст = СтрЗаменить( пДопТекст, "\", "\\" );

	оснТекст = СтрЗаменить( оснТекст, """", "\""" );
	допТекст = СтрЗаменить( допТекст, """", "\""" );
	
	оснТекст = СтрЗаменить( оснТекст, Символы.ПС, "\n" );
	допТекст = СтрЗаменить( допТекст, Символы.ПС, "\n" );
	
	текст = "payload={";
	
	Если ЗначениеЗаполнено( ИмяБота ) Тогда
		
		текст = текст + """username"": """ + ИмяБота +""",";
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено( ИконкаБота ) Тогда
		
		текст = текст + """icon_emoji"": """ + ИконкаБота +""",";
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено( Канал ) Тогда
		
		текст = текст + """channel"": """ + Канал +""",";
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено( допТекст ) Тогда
		
		текст = текст + "
		|""attachments"": [
		|{
		|""fallback"": """ + оснТекст + """,
		|""text"": """ + допТекст + """,
		|""pretext"": """ + оснТекст + """,
		|""mrkdwn_in"": [
		|	""text"",
		|	""pretext""
		|	]
		|}
		|],
		|""mrkdwn"": true,
		|""link_names"": 1
		|}";
		
	Иначе
		
		текст = текст + "
		|""text"": """ + оснТекст + """,
		|""mrkdwn"": true,
		|""link_names"": 1
		|}";
		
	КонецЕсли;
	
	прокси = Новый ИнтернетПрокси(Истина);

	HTTPСоединение = Новый HTTPСоединение( "https://hooks.slack.com",,,, прокси );

	Заголовки = Новый Соответствие;
	Заголовки.Вставить( "Content-type", "application/x-www-form-urlencoded; charset=utf-8" );
	
	HTTPЗапрос = Новый HTTPЗапрос( АдресРесурса, Заголовки );
	HTTPЗапрос.УстановитьТелоИзСтроки( текст, "utf-8" );

	Попытка
		
		ответ = HTTPСоединение.ОтправитьДляОбработки( HTTPЗапрос );
		
		Если Не ответ.КодСостояния = 200 Тогда

			Сообщить( "Ошибка при отправке сообщения в slack. Код состояния: " + ответ.КодСостояния + ". " + Ответ.ПолучитьТелоКакСтроку(), СтатусСообщения.Important );
			Сообщить( текст );

		КонецЕсли;

	Исключение

		Сообщить( "Ошибка при отправке сообщения в slack. " + ОписаниеОшибки(), СтатусСообщения.Important );

	КонецПопытки;

КонецПроцедуры